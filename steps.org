#+TITLE: Roger Skyline

* V.2 VM Part
** Hypervisor
- Hyper-V (Microsoft)
- to setup "turn Windows features on and off" ...
** Linux OS
- CentOS 7 (RHEL 7 community clone)
- downloaded via torrent from centos.org
- installation via graphic installer (basic server + system administration tools)
- check version: =cat /etc/centos-release=
** Disk size
- you choose size in the process of creating VM in Hyper-V - you just type an integer in the corresponding field; BUT for some reason when you choose "8 GB" Windows creates a slightly larger disk
- check: =lsblk -b=
** Partitions
- partitions were created during the installation process
- they can be triffled with via =fdisk= or =parted= utility (=gparted= for GUI)
- check: =parted -l= or =lsblk -b=
** Packages
- CentOS uses =yum= as a package manager which behaves just like apt but has nicer UI
- packages can be updated via =yum update= and upgraded via =yum upgrade=
- you can list all installed packages using =yum list installed=
* V.3 Network and Security Part
** Non-root user
- non-root user "ak" was created during the installation process
- you can create new users via =useradd= (use =-m= flag to also create standard folders in new user's home directory)
- check: =cat /etc/passwd= or =getent passwd=
** Special rights for the user
- in order to allow user to execute commands with root priveleges he must be appended to the group with such rights ("root", "wheel", "adm")
- you can add user to the group via =usermod -aG= (=-a= for append)
- to make sure group has root access rights use =visudo= and uncomment certain lines if necessary
- you can also select to make user administator during OS installation process
- check: =id= or =groups=
** Static IP with netmask 30
- you can query existing interfaces and their ips via =ifconfig= or =ip a s=
- per-interface settings are stored at /etc/sysconfig/network-scripts/ifcfg-<...>
- a better way to interact with your network settings is via =nmtui= utility
- netmask 30 means your network consists of just 4 addresses where only 1 is really free to use
- hence you need to attach your network to a separate switch
- you can create new (internal) virtual switch in Hyper-V or use default if it is free
- you shouldn't attach your network to the WSL switch because it has another mask!
- you can query ip address of your switch form host machine via =ifconfig=
- then you use it to calculate free spot for your VM in the 4-address range mentioned
- don't forget to assign at least 2 DNSs: cache (your gateway) and recursive (say, 8.8.8.8)
- TROUBLESHOOTING: if (say, after reboot) host has reassigned switch's IP you'll need to edit network settings once again
- check: =ifconfig= or =ip a s=, then =ping= something
** SSH: non-standard port, pubkeys, no-root
- you can interact with sshd via =service sshd=
- config is located at /etc/ssh/sshd_config
- changing "Port" line in the config is not enough - you also need to let know about changes to SELinux and firewall
- =yum install policycoreutils-python= and then execute =semange= as described in config comment
- then =firewall-cmd --add-port <NUM>/tcp=
- use =ssh-keygen -t rsa -b 4096 -C "<email>"= on the host to generate keys
- then =ssh-copy-id -p <PORT> -i ~/.ssh/id_rsa.pub ak@<IP>= to send pubkey on the VM
- edit "PermitRootLogin", "PubkeyAuthentication" and "PasswordAuthentication" lines in config
- restart sshd and try to ssh-connect using generated private key
** Setup firewall
-
